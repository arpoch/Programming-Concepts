Session - It creates a file in a temporary directory on the server where registered session variables and their values are stored.
            This data will be available to all pages on the site during that visit.

    >The location of the temporary file is determined by a setting in the php.ini file called session.save_path.
    >A visitor accessing your web site is assigned a unique id which is a random string of 32 hexadecimal numbers
        ,the so-called session id. This is either stored in a cookie on the user side or is propagated in the URL.
    >A session ends when the user loses the browser or after leaving the site, the server will terminate the session 
        after a predetermined period of time, commonly 30 minutes duration.

Starting a PHP Session- 
    Syntax-
        session_start()
            >This function first checks if a session is already started and if none is started then it starts one.
            >It is recommended to put the call to session_start() at the beginning of the page.

    >Session variables are stored in associative array called '$_SESSION[].
        These variables can be accessed during lifetime of a session.

Session Variables- 
    Syntax-
        >$_SESSION['variable name...'] = value;

Session Destroy-
    session_destroy() - >A PHP session can be destroyed by this function.
                        >This function does not need any argument and a single call can destroy all the session variables.
                        >If you want to destroy a single session variable then you can use unset() function to unset a session variable.
                            such as unset($_SESSION['variable name...']);

Session Encode Decode- 
    >session_encode
        Syntax-
            session_decode ( string $data )
        -Encodes the current session data as a session encoded string.
        -It returns a serialized string of the contents of the current session data stored in the $_SESSION superglobal.
        -Returns the contents of the current session encoded, or FALSE on failure.
    >session_dencode
        Syntax-
            session_encode()
        -Decodes session data from a session encoded string
        -Decodes the serialized session data provided in $data, and populates the $_SESSION superglobal with the result.
        Return
            The encoded data to be stored. 

Passing the Session ID
    
    There are two methods to propagate a session id:
        >Cookies
        >URL parameter-
            -Use the constant SID which is defined if the session started.
                If the client did not send an appropriate session cookie, it has the form session_name=session_id.
                Otherwise, it expands to an empty string. Thus, you can embed it unconditionally into URLs.
            -Syntax
                <a href="nextpage.php?<?php echo htmlspecialchars(SID); ?>
                The htmlspecialchars() may be used when printing the SID in order to prevent XSS related attacks. 

    SID (string)- Constant containing either the session name and session ID in the form of "name=ID" or empty string if session ID was set in an appropriate session cookie.

