PHP supports ten primitive types.

Four scalar types:

    bool- This is the simplest type. A bool expresses a truth value. It can be either TRUE or FALSE.

    int - 
        >It can be specified in decimal (base 10), hexadecimal (base 16)[0x], octal (base 8)[0], binary (base 2)[0b]
        >The negation operator can be used to denote a negative int.
        >PHP does not support unsigned ints.
        >If PHP encounters a number beyond the bounds of the int type, it will be interpreted as a float.
        >There is no int division operator in PHP, to achieve this use the intdiv() function.
        >A value can also be converted to int with the intval() function.
        >NaN NULL and Infinity will always be zero when cast to int.
        >If the string is numeric or leading numeric then it will resolve to the corresponding integer value.        

    float (floating-point number, aka double)-
        >The size of a float is platform-dependent, although a maximum of approximately 1.8e308 with a precision of roughly 14 decimal digits(the 64 bit IEEE format).
        >Syntax = 1.234; 1.2e3; 7E-10; 1_234.567
        >If the string is numeric or leading numeric then it will resolve to the corresponding float value, otherwise it is converted to zero (0). 
        >testing floating point values for equality is problematic, due to the way that they are represented internally.
        >For values of other types, the conversion is performed by converting the value to int first and then to float.
        >If the string is numeric or leading numeric then it will resolve to the corresponding float value, otherwise it is converted to zero (0).

   string- See string notes

Four compound types:

    array - See array notes
    object
    callable
    iterable

And finally two special types:

    resource
    NULL

